#!/bin/bash
#https://google.github.io/styleguide/shell.xml

configFile=./config/config.json
serviceDirectory=./services
logFile=./logs/supervisor.log

configParams=(serviceName checkInterval backOffNum restartAttemptsInterval)

function fetchConfig {
	log "|-Fetch configs"
	for param in ${configParams[@]}
	do
		eval "${param}=$(jq .${param} ${configFile})"
	done
}

function log {
	echo [$(date +'%Y-%m-%dT%H:%M:%S%z')]: $@ >> ${logFile}
}

function isAlive {
	pgrep -x ${serviceName} >/dev/null
}

function startService {
	nohup ${serviceDirectory}/${serviceName} >/dev/null 2>&1 &
}

function startAttempt {
	log "|_Attempting start the service ${serviceName}"
	for try in $(seq 1 ${backOffNum})
	do
		if ! isAlive
		then
			log "|__>try ${try} of ${backOffNum} to start ${serviceName}"
			startService	
		else
			break
		fi
		sleep ${restartAttemptsInterval}
	done
	if [[ ${try} -eq ${backOffNum} ]] && ! isAlive
	then
		echo "backoff"
	else
		echo "continue"
	fi
}

function backOff {
	log "After ${backOffNum} tries ${serviceName} could not be started --> BackOff and Exit"
	exit
}

fetchConfig
while true
do
	if ! isAlive
	then
		log "${serviceName} is not alive --> Attempt to start"
		if [[ "$(startAttempt)" == "backoff" ]]
		then
			backOff
		fi		
	else
		log "${serviceName} is alive --> Check again ${checkInterval} seconds later"
	fi
	sleep ${checkInterval}
done




